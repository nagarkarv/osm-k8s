apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    osm-service: osm-kafka-claim0
  name: osm-kafka-claim0
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    osm-service: osm-kafka
  name: osm-kafka
spec:
  ports:
  - name: "9092"
    port: 9092
    targetPort: 9092
  selector:
    osm-service: osm-kafka
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    osm-service: osm-kafka
  name: osm-kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      osm-service: osm-kafka  
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        osm-service: osm-kafka
    spec:
      containers:
      - env:
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: osm-kafka
        - name: KAFKA_ADVERTISED_PORT
          value: "9092"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: osm-zookeeper:2181
        - name:  KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS
          value: "36000"
        image: wurstmeister/kafka:latest
        name: osm-kafka
        ports:
        - containerPort: 9092
        resources: {}
        volumeMounts:
        - mountPath: /var/run/docker.sock
          name: osm-kafka-claim0
      restartPolicy: Always
      volumes:
      - name: osm-kafka-claim0
        persistentVolumeClaim:
          claimName: osm-kafka-claim0
status: {}
